grammar Latex
    rule latex_content
        (environment/command/text)* <Rulex::Tex::Grammar::LatexContent>
    end

    rule environment
        "\\begin{" environment_name "}" environment_text  "\\end{" environment_name &{ |seq|  seq[1].text_value == seq[5].text_value } "}" <Rulex::Tex::Grammar::Environment>
    end

    rule environment_text
        latex_content
    end


    rule environment_name
        [^}\s]+
    end

    rule command
       "\\" command_name ('[' command_option (',' command_option)* ']')? ('{' command_argument '}')* <Rulex::Tex::Grammar::Command>
    end

    rule command_option
        (![\s,] [a-z0-9])+ # With the neg. lookahead we make sure we don't consume the next command
    end

    rule command_name
        !"begin" # First, we make sure it is not the beginning of an environment
        (!"end"  # Then, we make sure it won't consume the end of an environment
        ([^\[{\s]+)) # Finally, we don't want to consume the options or args of the command
    end

    rule command_argument
        [^}]+
    end

    rule text
        (spaces? word spaces?)+ <Rulex::Tex::Grammar::Text>
    end

    rule word
        ([^\s\\])+
    end

    rule spaces
        [\s\n]+
    end
end
